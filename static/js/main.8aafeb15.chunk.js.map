{"version":3,"sources":["component/TitleButton/TitleButton.jsx","component/TitleText/TitleText.jsx","App.js","index.js"],"names":["TitleButton","id","title","getIdChoosedTitle","isActiveTabId","className","type","onClick","event","target","TitleText","content","tabs","App","state","setState","findActiveTab","value","find","tab","this","map","key","React","Component","ReactDOM","render","document","getElementById"],"mappings":"+QAsBeA,G,MAlBK,SAAC,GAAD,IAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,kBAAmBC,EAAjC,EAAiCA,cAAjC,OAClB,4BACEC,UAAWD,IAAkBH,EAAlB,UAA0BC,EAA1B,aAA6C,MACxDI,KAAK,SACLL,GAAIA,EACJM,QAAS,SAAAC,GAAK,OAAIL,EAAkBK,EAAMC,OAAOR,MAEhDC,KCOUQ,G,MAbG,SAAC,GAAD,IAAGR,EAAH,EAAGA,MAAOS,EAAV,EAAUA,QAAV,OAChB,yBACEN,UAAS,UAAKH,EAAL,WAET,2BAAIS,MCHFC,G,MAAO,CACX,CAAEX,GAAI,QAASC,MAAO,QAASS,QAAS,eACxC,CAAEV,GAAI,QAASC,MAAO,QAASS,QAAS,eACxC,CAAEV,GAAI,QAASC,MAAO,QAASS,QAAS,kBAsD3BE,E,4MAjDbC,MAAQ,CACNF,OACAR,cAAe,S,EAGjBD,kBAAoB,SAACF,GACnB,EAAKc,SAAS,CAAEX,cAAeH,K,EAGjCe,cAAgB,SAACC,GAGf,OAFoBL,EAAKM,MAAK,SAAAC,GAAG,OAAIA,EAAIlB,KAAO,EAAKa,MAAMV,iBAExCa,I,4CAGrB,WAAU,IAAD,OACCb,EAAkBgB,KAAKN,MAAvBV,cAER,OACE,oCACE,wBACEC,UAAU,cADZ,eAIGD,GAEH,wBAAIC,UAAU,YACXe,KAAKN,MAAMF,KAAKS,KAAI,SAAAF,GAAG,OACtB,wBACEG,IAAKH,EAAIlB,IAET,kBAAC,EAAD,CACEA,GAAIkB,EAAIlB,GACRC,MAAOiB,EAAIjB,MACXC,kBAAmB,EAAKA,kBACxBC,cAAeA,SAKvB,kBAAC,EAAD,CACEF,MAAOkB,KAAKJ,cAAc,SAC1BL,QAASS,KAAKJ,cAAc,kB,GA3CpBO,IAAMC,WCTxBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.8aafeb15.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './TitleButton.scss';\n\nconst TitleButton = ({ id, title, getIdChoosedTitle, isActiveTabId }) => (\n  <button\n    className={isActiveTabId === id ? `${title} show btn` : 'btn'}\n    type=\"button\"\n    id={id}\n    onClick={event => getIdChoosedTitle(event.target.id)}\n  >\n    {title}\n  </button>\n);\n\nTitleButton.propTypes = {\n  id: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  getIdChoosedTitle: PropTypes.func.isRequired,\n  isActiveTabId: PropTypes.string.isRequired,\n};\n\nexport default TitleButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './TitleText.scss';\n\nconst TitleText = ({ title, content }) => (\n  <div\n    className={`${title}  show`}\n  >\n    <p>{content}</p>\n  </div>\n);\n\nTitleText.propTypes = {\n  content: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n};\n\nexport default TitleText;\n","import React from 'react';\nimport TitleButton from './component/TitleButton/TitleButton';\nimport TitleText from './component/TitleText/TitleText';\nimport './App.scss';\n\n/* eslint-disable */\nconst tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text  3' },\n];\n/* eslint-enable */\n\nclass App extends React.Component {\n  state = {\n    tabs,\n    isActiveTabId: 'tab-1',\n  }\n\n  getIdChoosedTitle = (id) => {\n    this.setState({ isActiveTabId: id });\n  }\n\n  findActiveTab = (value) => {\n    const selectedTab = tabs.find(tab => tab.id === this.state.isActiveTabId);\n\n    return selectedTab[value];\n  }\n\n  render() {\n    const { isActiveTabId } = this.state;\n\n    return (\n      <>\n        <h1\n          className=\"tabsHeader\"\n        >\n          Tab selected\n          {isActiveTabId}\n        </h1>\n        <ul className=\"tabsList\">\n          {this.state.tabs.map(tab => (\n            <li\n              key={tab.id}\n            >\n              <TitleButton\n                id={tab.id}\n                title={tab.title}\n                getIdChoosedTitle={this.getIdChoosedTitle}\n                isActiveTabId={isActiveTabId}\n              />\n            </li>\n          ))}\n        </ul>\n        <TitleText\n          title={this.findActiveTab('title')}\n          content={this.findActiveTab('content')}\n        />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}